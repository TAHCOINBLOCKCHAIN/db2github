name: Fetch export files 159m

on:
  schedule:
    - cron: '*/159 * * * *'  # Runs every 159 minutes
  workflow_dispatch:

jobs:
  fetch_files:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Create current year directory
        run: |
          CURRENT_YEAR=$(date +'%Y')
          mkdir -p "$GITHUB_WORKSPACE/$CURRENT_YEAR"

      - name: Move existing current date directories to current year directory
        run: |
          CURRENT_YEAR=$(date +'%Y')
          # Move all directories created in the current year to the current year directory
          for dir in $GITHUB_WORKSPACE/*; do
            if [[ -d "$dir" && $(basename "$dir") =~ ^$CURRENT_YEAR-[0-9]{2}-[0-9]{2}$ ]]; then
              mv "$dir" "$GITHUB_WORKSPACE/$CURRENT_YEAR/"
              echo "Moved directory $(basename "$dir") to $CURRENT_YEAR."
            fi
          done

      - name: Create current date directory inside year directory
        run: |
          CURRENT_YEAR=$(date +'%Y')
          CURRENT_DATE=$(date +'%Y-%m-%d')
          mkdir -p "$GITHUB_WORKSPACE/$CURRENT_YEAR/$CURRENT_DATE"
          chmod 777 "$GITHUB_WORKSPACE/$CURRENT_YEAR/$CURRENT_DATE"

      - name: Install Git LFS
        run: |
          git lfs install
          git lfs track "*.sql"
          echo "*.sql filter=lfs diff=lfs merge=lfs -text" >> .gitattributes

      - name: Download export files
        run: |
          CURRENT_YEAR=$(date +'%Y')
          CURRENT_DATE=$(date +'%Y-%m-%d')
          for i in $(seq 0 9); do
            FILE_NAME="export_$i.sql"
            URL="https://tahriver.online/$FILE_NAME"
            OUTPUT_PATH="$GITHUB_WORKSPACE/$CURRENT_YEAR/$CURRENT_DATE/$FILE_NAME"
            
            if curl --output /dev/null --silent --head --fail "$URL"; then
              if [[ -f "$OUTPUT_PATH" ]]; then
                EXISTING_SIZE=$(stat -c%s "$OUTPUT_PATH")
                NEW_SIZE=$(curl -sI "$URL" | grep -i Content-Length | awk '{print $2}' | tr -d '\r')

                if (( NEW_SIZE > EXISTING_SIZE )); then
                  curl -o "$OUTPUT_PATH" "$URL"
                else
                  echo "Skipping $FILE_NAME; existing file is larger or equal in size."
                fi
              else
                curl -o "$OUTPUT_PATH" "$URL"
              fi
            else
              echo "File $FILE_NAME not found at $URL."
            fi
          done

      - name: Check for secrets
        run: |
          git diff --cached | grep -E 'your_secret_pattern' && exit 1 || echo "No secrets found."

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: Commit and push changes
        run: |
          git config --local user.name "github-actions"
          git config --local user.email "action@github.com"
          git add "./$CURRENT_YEAR/"
          git commit -m "Update export files for $CURRENT_DATE" || echo "No changes to commit"
          git push git@github.com:TAHCOINBLOCKCHAIN/db2github.git
